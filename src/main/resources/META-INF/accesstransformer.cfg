#提高兼容性
public net.minecraft.server.MinecraftServer m_206568_(Ljava/lang/Throwable;)Lnet/minecraft/CrashReport; # constructOrExtractCrashReport
#通过报错途径关闭服务器
public net.minecraft.server.MinecraftServer f_236721_ # services
public net.minecraft.server.MinecraftServer f_129765_ # stopped


public net.minecraft.server.level.ChunkHolder f_140001_ # futures
public net.minecraft.server.level.ChunkHolder f_203750_ # NOT_DONE_YET

public net.minecraft.util.thread.BlockableEventLoop *
public net.minecraft.world.level.Level *
protected net.minecraft.server.level.ServerChunkCache m_8456_(IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; # getChunkFutureMainThread
public net.minecraft.server.level.ServerChunkCache m_8488_()V # clearCache
public net.minecraft.server.level.ServerChunkCache m_8489_()Z # runDistanceManagerUpdates
public net.minecraft.server.level.ServerChunkCache f_8332_ # mainThreadProcessor
public net.minecraft.server.level.ServerChunkCache f_8327_ # distanceManager
public net.minecraft.server.level.ServerChunkCache f_8337_ # lastChunkPos
public net.minecraft.server.level.ServerChunkCache f_8339_ # lastChunk
public net.minecraft.server.level.ServerChunkCache f_8338_ # lastChunkStatus
public net.minecraft.server.level.DistanceManager m_140857_(J)Lnet/minecraft/util/SortedArraySet; # getTickets
public-f net.minecraft.server.level.ServerChunkCache$MainThreadExecutor
public net.minecraft.world.level.redstone.CollectingNeighborUpdater$NeighborUpdate
public net.minecraft.server.level.ChunkMap m_140327_(J)Lnet/minecraft/server/level/ChunkHolder; # getVisibleChunkIfPresent
public net.minecraft.server.level.ChunkHolder currentlyLoading

protected net.minecraft.world.level.redstone.CollectingNeighborUpdater m_230660_(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates;)V # addAndRun
protected net.minecraft.world.level.redstone.CollectingNeighborUpdater m_230645_()V # runUpdates
protected net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230640_ # count
protected-f net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230638_ # stack
protected-f net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230639_ # addedThisLayer
protected net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230636_ # level
protected net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230637_ # maxChainedNeighborUpdates
protected net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230635_ # LOGGER
public net.minecraft.world.level.redstone.CollectingNeighborUpdater$NeighborUpdates
public-f net.minecraft.world.level.biome.Climate$ParameterList f_186846_ # values
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager$Source
public net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager$Source <init>(Ljava/util/function/Function;Ljava/util/function/Supplier;)V # Source

public net.minecraft.world.entity.ai.attributes.AttributeInstance f_22089_ # modifiersByOperation
public net.minecraft.world.entity.ai.attributes.AttributeInstance f_22090_ # modifierById
public net.minecraft.world.entity.ai.attributes.AttributeInstance f_22091_ # permanentModifiers
public net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket <init>(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/nbt/CompoundTag;)V # ClientboundBlockEntityDataPacket
public net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket *
public net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket *
public net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket *
public-f net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket f_132982_ # states
public-f net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket f_132980_ # sectionPos
public-f net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket f_132981_ # positions
public net.minecraft.server.level.ServerChunkCache$ChunkAndHolder
public net.minecraft.server.level.ChunkMap f_140133_ # level

public net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230636_ # level
public net.minecraft.world.level.redstone.CollectingNeighborUpdater f_230637_ # maxChainedNeighborUpdates


public net.minecraft.network.protocol.PacketUtils f_131354_ # LOGGER
public net.minecraft.server.level.DistanceManager f_140761_ # tickets

public net.minecraft.world.level.entity.EntityTickList f_156903_ # active
public net.minecraft.world.level.entity.EntityTickList f_156905_ # iterated
public net.minecraft.client.multiplayer.ClientLevel f_171630_ # tickingEntities
public net.minecraft.world.entity.Entity m_19915_(FF)V # setRot
public net.minecraft.world.entity.LivingEntity f_20903_ # lerpSteps
public net.minecraft.world.entity.LivingEntity f_20904_ # lerpX
public net.minecraft.world.entity.LivingEntity f_20905_ # lerpY
public net.minecraft.world.entity.LivingEntity f_20906_ # lerpZ
public net.minecraft.world.entity.LivingEntity f_20907_ # lerpYRot
public net.minecraft.world.entity.LivingEntity f_20908_ # lerpXRot

public net.minecraft.world.level.chunk.PalettedContainer$Data
public net.minecraft.world.level.chunk.PalettedContainer$Data f_188102_()Lnet/minecraft/world/level/chunk/Palette; # palette
public net.minecraft.world.level.chunk.PalettedContainer$Data f_188101_()Lnet/minecraft/util/BitStorage; # storage

public net.minecraft.world.entity.Entity f_19853_ # level